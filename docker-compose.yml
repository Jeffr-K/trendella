version: "3.9"

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    networks:
      - trendella-net
  db:
    image: mysql:8
    restart: always
    container_name: database
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=trendella_db
    volumes:
      - ../trendella-utils/db/mysql/init:/docker-entrypoint-initdb.d
      - ../trendella-utils/db/mysql/data:/var/lib/mysql
    networks:
      - trendella-net
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "6060:6060"
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - SPRING_DATASOURCE_URL=${DATABASE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_DATA_REDIS_PORT=${REDIS_PORT}
      - SPRING_DATA_REDIS_HOST=${REDIS_HOST}
      - SPRING_DATA_REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - db
      - redis
    networks:
      - trendella-net
  redis:
    container_name: redis
    image: "redis:latest"
    restart: always
    ports:
      - ${REDIS_PORT}
  elasticsearch:
    container_name: eleasticsearch
    image: 'docker.elastic.co/elasticsearch/elasticsearch:8.11.1'
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "ELASTIC_PASSWORD=root"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    networks:
      - trendella-net
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.11.1
    restart: always
    ports:
      - "5601:5601"
    environment:
      SERVER_NAME: kibana.lambsroad.org
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200", "http://elasticsearch:9300"]'
    depends_on:
      - elasticsearch
    networks:
      - trendella-net

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    ports:
      - "9090:9090"
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ../trendella-utils/prometheus/config:/etc/prometheus
      - ../trendella-utils/prometheus/volume:/prometheus
    networks:
      - trendella-net
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    ports:
      - "4000:4000"
    volumes:
      - ../trendella-utils/grafana/volume:/var/lib/grafana
    networks:
      - trendella-net

networks:
  trendella-net:
    external: true

volumes:
  db_data:
